// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

//Travis config
//def isTravis = "true".equals(System.getenv("TRAVIS"))
//def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))


apply plugin: 'android-sdk-manager'
apply plugin: 'android'
//apply plugin: 'crashlytics'
apply plugin: 'hugo'
apply plugin: 'newrelic'


android {
//    Travis config
//    dexOptions {
//        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
//        preDexLibraries = preDexEnabled && !isTravis
//    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {

        debug {
            //packageNameSuffix '.dev'
//            versionNameSuffix '-dev'
        }

//        main {
//            manifest.srcFile 'AndroidManifest.xml'
//            res.srcDirs = ['res']
//        }
        androidTest {
            setRoot('src/test')
        }
    }
}

//lintOptions {
//    abortOnError false
//}

//androidTest {
//    include '**/*Test.class'
//    exclude '**/espresso/**/*.class'
//}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    //Testing
    // Espresso
    androidTestCompile files('lib/espresso-1.1.jar', 'lib/testrunner-1.1.jar', 'lib/testrunner-runtime-1.1.jar')
    androidTestCompile 'com.google.guava:guava:14.0.1',
            'com.squareup.dagger:dagger:1.1.0',
            'org.hamcrest:hamcrest-integration:1.1',
            'org.hamcrest:hamcrest-core:1.1',
            'org.hamcrest:hamcrest-library:1.1', 'org.mockito:mockito-all:1.9.5'

    androidTestCompile('junit:junit:4.11') {
        exclude module: 'hamcrest-core'
    }
    androidTestCompile('org.robolectric:robolectric:2.3') {
        exclude module: 'classworlds'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-plugin-registry'
        exclude module: 'maven-profile'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'nekohtml'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-http-shared'
        exclude module: 'wagon-provider-api'
    }
    androidTestCompile 'com.squareup:fest-android:1.0.+'

    //Android libraries and plugins

    // dependency injection
    provided 'com.squareup.dagger:dagger-compiler:1.2.1'

    //NetWorking
    debugCompile 'com.squareup.retrofit:retrofit-mock:1.4.1'

    //Logging util

    //Debugging
    debugCompile 'com.jakewharton.madge:madge:1.1.1'
    debugCompile 'com.jakewharton.scalpel:scalpel:1.1.1'

    //Event bus

    // Google Play Services

    //TODO: configure your crashlytics app
    //compile 'com.crashlytics.android:crashlytics:1.+'

    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.squareup.dagger:dagger:1.2.1'
    compile 'com.jakewharton:butterknife:4.0.1'
    compile 'com.squareup.okhttp:okhttp:1.3.0'
    compile 'com.squareup.picasso:picasso:2.2.0'
    compile 'com.squareup.retrofit:retrofit:1.4.1'
    compile 'com.jakewharton.timber:timber:2.2.2'
    compile 'com.netflix.rxjava:rxjava-core:0.16.1'
    compile 'com.netflix.rxjava:rxjava-android:0.16.1'
    compile 'com.google.android.gms:play-services:4.3.23'
    compile 'com.newrelic.agent.android:android-agent:3.361.0'
}

apply plugin: 'idea'

idea {
    module {
        testOutputDir = file('build/test-classes/debug')
    }


}
apply plugin: 'announce'